{"version":3,"file":"static/js/311.a7b6e740.chunk.js","mappings":"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","sources":["services/oauthFSLAuth.js"],"sourcesContent":["import FSLAuthorization from 'fsl-authorization';\r\nimport { ethers } from 'ethers';\r\nimport Web3 from 'web3';\r\nimport { API_CONFIG } from './fslConfig';\r\n\r\n/**\r\n * OAuth-based FSL Authentication Service\r\n * \r\n * Flow:\r\n * 1. OAuth Authentication ‚Üí Get access token\r\n * 2. User Identity Verification ‚Üí Compare with /app/marketUserData\r\n * 3. FSL SDK Payment ‚Üí Use access token for blockchain operations\r\n */\r\nclass OAuthFSLAuthService {\r\n  constructor() {\r\n    this.accessToken = null;\r\n    this.currentUser = null;\r\n    this.fslAuth = null;\r\n    this.isInitialized = false;\r\n    this.isDevelopment = process.env.NODE_ENV === 'development' || window.location.hostname === 'localhost';\r\n    \r\n    // FSL OAuth Configuration\r\n    this.FSL_OAUTH_URL = 'https://id.fsl.com/api/account/oauth/authorize';\r\n    this.FSL_USER_PROFILE_URL = 'https://id.fsl.com/api/account/party/user';\r\n    this.APP_KEY = 'MiniGame';\r\n    this.REDIRECT_URI = window.location.origin + window.location.pathname; // Use current web URL\r\n    \r\n    // GGUSD Contract addresses\r\n    this.GGUSD_CONTRACTS = {\r\n      137: '0xFFFFFF9936BD58a008855b0812B44D2c8dFFE2aA', // Polygon\r\n      56: '0xffffff9936bd58a008855b0812b44d2c8dffe2aa',  // BSC\r\n      80002: '0xfF39ac1e2aD4CbA1b86D77d972424fB8515242bd' // Amoy\r\n    };\r\n\r\n    // Chain configurations\r\n    this.CHAIN_NAMES = {\r\n      80002: 'Amoy',\r\n      137: 'Polygon',\r\n      56: 'BSC',\r\n    };\r\n\r\n    this.FSL_CHAIN_MAPPING = {\r\n      80002: 'polygon',\r\n      137: 'polygon',\r\n      56: 'bsc',\r\n    };\r\n\r\n    this.RPC_URLS = {\r\n      80002: 'https://rpc-amoy.polygon.technology/',\r\n      137: 'https://polygon-rpc.com/',\r\n      56: 'https://bsc-dataseed.binance.org/',\r\n    };\r\n  }\r\n\r\n  /**\r\n   * Phase 1: OAuth Authentication\r\n   * Redirect user to FSL OAuth for authentication\r\n   */\r\n  async authenticateWithOAuth() {\r\n    try {\r\n      console.log('üîÑ Starting OAuth authentication...');\r\n      \r\n      const params = new URLSearchParams({\r\n        response_type: 'token',\r\n        appkey: this.APP_KEY,\r\n        redirect_uri: encodeURIComponent(this.REDIRECT_URI),\r\n        scope: 'basic,wallet,stepn',\r\n        state: 'gamehub_payment'\r\n      });\r\n      \r\n      const oauthUrl = `${this.FSL_OAUTH_URL}?${params.toString()}`;\r\n      console.log('üîó OAuth URL:', oauthUrl);\r\n      \r\n      // Redirect to FSL OAuth\r\n      window.location.href = oauthUrl;\r\n      \r\n    } catch (error) {\r\n      console.error('‚ùå OAuth authentication failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Handle OAuth callback and extract access token\r\n   * This should be called from the callback page\r\n   */\r\n  handleOAuthCallback() {\r\n    try {\r\n      console.log('üîÑ Handling OAuth callback...');\r\n      \r\n      // Get access token from URL fragment\r\n      const fragment = window.location.hash.substring(1);\r\n      const params = new URLSearchParams(fragment);\r\n      \r\n      this.accessToken = params.get('access_token');\r\n      const state = params.get('state');\r\n      const error = params.get('error');\r\n      \r\n      console.log('üîç OAuth callback params:', { accessToken: !!this.accessToken, state, error });\r\n      \r\n      if (error) {\r\n        throw new Error(`OAuth error: ${error}`);\r\n      }\r\n      \r\n      if (!this.accessToken) {\r\n        throw new Error('No access token received from OAuth');\r\n      }\r\n      \r\n      // Store access token\r\n      localStorage.setItem('fsl_access_token', this.accessToken);\r\n      localStorage.setItem('fsl_oauth_timestamp', Date.now().toString());\r\n      \r\n      console.log('‚úÖ OAuth callback successful, access token stored');\r\n      \r\n      return {\r\n        success: true,\r\n        accessToken: this.accessToken,\r\n        state: state\r\n      };\r\n      \r\n    } catch (error) {\r\n      console.error('‚ùå OAuth callback handling failed:', error);\r\n      return {\r\n        success: false,\r\n        error: error.message\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get stored access token or trigger re-authentication\r\n   */\r\n  async getAccessToken() {\r\n    try {\r\n      // Check if we have a valid access token\r\n      const storedToken = localStorage.getItem('fsl_access_token');\r\n      const timestamp = localStorage.getItem('fsl_oauth_timestamp');\r\n      \r\n      if (storedToken && timestamp) {\r\n        const tokenAge = Date.now() - parseInt(timestamp);\r\n        const tokenLifetime = 24 * 60 * 60 * 1000; // 24 hours in milliseconds\r\n        \r\n        if (tokenAge < tokenLifetime) {\r\n          this.accessToken = storedToken;\r\n          console.log('‚úÖ Using stored access token');\r\n          return this.accessToken;\r\n        } else {\r\n          console.log('‚ö†Ô∏è Access token expired, clearing...');\r\n          this.clearStoredTokens();\r\n        }\r\n      }\r\n      \r\n      // No valid token, need to authenticate\r\n      console.log('üîÑ No valid access token, redirecting to OAuth...');\r\n      await this.authenticateWithOAuth();\r\n      \r\n    } catch (error) {\r\n      console.error('‚ùå Failed to get access token:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Clear stored OAuth tokens\r\n   */\r\n  clearStoredTokens() {\r\n    localStorage.removeItem('fsl_access_token');\r\n    localStorage.removeItem('fsl_oauth_timestamp');\r\n    this.accessToken = null;\r\n    console.log('üóëÔ∏è Stored tokens cleared');\r\n  }\r\n\r\n  /**\r\n   * Phase 2: User Identity Verification\r\n   * Get user profile from FSL API and verify with /app/marketUserData\r\n   */\r\n  async verifyUserIdentity() {\r\n    try {\r\n      console.log('üîç Verifying user identity...');\r\n      \r\n      if (!this.accessToken) {\r\n        throw new Error('No access token available');\r\n      }\r\n\r\n      // Get user profile from FSL API\r\n      const fslUserProfile = await this.getFSLUserProfile();\r\n      console.log('üìä FSL User Profile:', fslUserProfile);\r\n      \r\n      // Get market user data from your API\r\n      const marketUserData = await this.getMarketUserData();\r\n      console.log('üìä Market User Data:', marketUserData);\r\n      \r\n      // Compare FSL IDs\r\n      const fslId = fslUserProfile.data?.fslUid || fslUserProfile.data?.uid;\r\n      const marketFSLId = marketUserData.fslId;\r\n      \r\n      console.log('üîç Comparing FSL IDs:');\r\n      console.log('  FSL API FSL ID:', fslId);\r\n      console.log('  Market API FSL ID:', marketFSLId);\r\n      \r\n      if (!fslId || !marketFSLId) {\r\n        throw new Error('Missing FSL ID from one or both sources');\r\n      }\r\n      \r\n      const isMatch = fslId.toString() === marketFSLId.toString();\r\n      console.log('‚úÖ FSL ID match:', isMatch);\r\n      \r\n      if (isMatch) {\r\n        // Store verified user data\r\n        this.currentUser = {\r\n          fslId: fslId,\r\n          fslProfile: fslUserProfile.data,\r\n          marketProfile: marketUserData,\r\n          isVerified: true,\r\n          verifiedAt: new Date().toISOString()\r\n        };\r\n        \r\n        console.log('‚úÖ User identity verified:', this.currentUser);\r\n        return {\r\n          success: true,\r\n          user: this.currentUser,\r\n          fslId: fslId\r\n        };\r\n      } else {\r\n        throw new Error('FSL ID mismatch. User may be logged into different account.');\r\n      }\r\n      \r\n    } catch (error) {\r\n      console.error('‚ùå User identity verification failed:', error);\r\n      return {\r\n        success: false,\r\n        error: error.message\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get user profile from FSL API using access token\r\n   */\r\n  async getFSLUserProfile() {\r\n    try {\r\n      console.log('üì° Getting FSL user profile...');\r\n      \r\n      const response = await fetch(this.FSL_USER_PROFILE_URL, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Authorization': `Bearer ${this.accessToken}`,\r\n          'Content-Type': 'application/json'\r\n        }\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`FSL API error: ${response.status} ${response.statusText}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log('‚úÖ FSL user profile received:', data);\r\n      \r\n      return data;\r\n      \r\n    } catch (error) {\r\n      console.error('‚ùå Failed to get FSL user profile:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Get market user data from your API\r\n   */\r\n  async getMarketUserData() {\r\n    try {\r\n      console.log('üì° Getting market user data...');\r\n      \r\n      // This should call your existing /app/marketUserData API\r\n      // You'll need to implement this based on your current implementation\r\n      const response = await fetch(`${API_CONFIG.server_url}/api/app/marketUserData`, {\r\n        method: 'GET',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n          // Add any required headers (auth tokens, etc.)\r\n        }\r\n      });\r\n      \r\n      if (!response.ok) {\r\n        throw new Error(`Market API error: ${response.status} ${response.statusText}`);\r\n      }\r\n      \r\n      const data = await response.json();\r\n      console.log('‚úÖ Market user data received:', data);\r\n      \r\n      return data;\r\n      \r\n    } catch (error) {\r\n      console.error('‚ùå Failed to get market user data:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Phase 3: Initialize FSL SDK with access token\r\n   */\r\n  async initFSLSDK() {\r\n    try {\r\n      console.log('üîÑ Initializing FSL SDK with access token...');\r\n      \r\n      if (!this.accessToken) {\r\n        throw new Error('No access token available for FSL SDK initialization');\r\n      }\r\n      \r\n      if (this.isInitialized && this.fslAuth) {\r\n        console.log('‚úÖ FSL SDK already initialized');\r\n        return this.fslAuth;\r\n      }\r\n      \r\n      // Initialize FSL SDK with access token\r\n      const initOptions = {\r\n        accessToken: this.accessToken, // ‚Üê Key: Use OAuth access token\r\n        appKey: this.APP_KEY,\r\n        redirectUri: this.REDIRECT_URI,\r\n        scope: 'basic,wallet,stepn',\r\n        state: 'gamehub_payment',\r\n        usePopup: true,\r\n        isApp: false,\r\n        domain: 'https://9ijsflpfgm3.joysteps.io',\r\n      };\r\n      \r\n      console.log('üîß FSL SDK init options:', initOptions);\r\n      \r\n      this.fslAuth = await FSLAuthorization.init(initOptions);\r\n      this.isInitialized = true;\r\n      \r\n      console.log('‚úÖ FSL SDK initialized successfully with access token');\r\n      return this.fslAuth;\r\n      \r\n    } catch (error) {\r\n      console.error('‚ùå FSL SDK initialization failed:', error);\r\n      throw error;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Phase 4: Payment with FSL SDK (keeping existing functionality)\r\n   */\r\n  async processPayment(purchaseData, chainId) {\r\n    try {\r\n      console.log('üí∞ Processing payment with FSL SDK...');\r\n      console.log('üìä Purchase Data:', purchaseData);\r\n      console.log('üîó Chain ID:', chainId);\r\n      \r\n      // 1. Verify user identity first\r\n      const verificationResult = await this.verifyUserIdentity();\r\n      if (!verificationResult.success) {\r\n        throw new Error(`User verification failed: ${verificationResult.error}`);\r\n      }\r\n      \r\n      // 2. Initialize FSL SDK\r\n      const fslAuth = await this.initFSLSDK();\r\n      \r\n      // 3. Process payment using existing callEvmContractByCallData method\r\n      const result = await this.callEvmContractByCallDataWithCustomData(\r\n        purchaseData, \r\n        chainId, \r\n        purchaseData.customData || '0x'\r\n      );\r\n      \r\n      console.log('‚úÖ Payment processed successfully:', result);\r\n      return result;\r\n      \r\n    } catch (error) {\r\n      console.error('‚ùå Payment processing failed:', error);\r\n      return {\r\n        success: false,\r\n        error: error.message\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Keep existing payment method (copy from original service)\r\n   */\r\n  async callEvmContractByCallDataWithCustomData(purchaseData, chainId, customData) {\r\n    try {\r\n      console.log('üîó Processing custom data transaction...');\r\n      console.log('üìä Purchase Data:', purchaseData);\r\n      console.log('üîó Chain ID:', chainId);\r\n      console.log('üìù Custom Data:', customData);\r\n            \r\n      // Get contract and treasury addresses\r\n      const contractAddress = this.GGUSD_CONTRACTS[chainId];\r\n      const treasuryAddress = this.getTreasuryAddress(chainId);\r\n      \r\n      if (!contractAddress || !treasuryAddress) {\r\n        throw new Error(`Unsupported chain ID: ${chainId}`);\r\n      }\r\n      \r\n      // Calculate GGUSD amount\r\n      const ggusdAmount = purchaseData.price || purchaseData.ggusdAmount || 1;\r\n      \r\n      // Get decimals from contract\r\n      const web3 = new Web3(this.RPC_URLS[chainId]);\r\n      const contract = new web3.eth.Contract(this.GGUSD_ABI, contractAddress);\r\n      const contractDecimals = await contract.methods.decimals().call();\r\n      const decimals = Number(contractDecimals.toString());\r\n      \r\n      // Convert GGUSD amount to proper decimals\r\n      const amountInWei = ethers.parseUnits(ggusdAmount.toString(), decimals);\r\n      const amountInWeiString = amountInWei.toString();\r\n      \r\n      console.log('üí∞ Transaction Details:');\r\n      console.log('  Contract Address:', contractAddress);\r\n      console.log('  Treasury Address:', treasuryAddress);\r\n      console.log('  Amount (GGUSD):', ggusdAmount);\r\n      console.log('  Amount (Wei):', amountInWeiString);\r\n      console.log('  Custom Data Length:', customData.length);\r\n      \r\n      // Create callData with custom data\r\n      const transferFunctionSelector = '0xa9059cbb'; // transfer(address,uint256)\r\n      const encodedParams = ethers.AbiCoder.defaultAbiCoder().encode(\r\n        ['address', 'uint256'],\r\n        [treasuryAddress, amountInWeiString]\r\n      );\r\n      \r\n      // Combine function selector, params and custom data\r\n      const callData = transferFunctionSelector + encodedParams.slice(2) + customData.slice(2);\r\n      \r\n      console.log('üîó Final CallData:', callData);\r\n      \r\n      // Call FSL SDK with callData\r\n      const fslAuth = await this.initFSLSDK();\r\n      const result = await fslAuth.callEvmContractByCallData({\r\n        contractAddress: contractAddress,\r\n        callData: callData,\r\n        chainId: chainId,\r\n        gasLimit: '200000',\r\n        chain: this.FSL_CHAIN_MAPPING[chainId],\r\n        rpc: this.RPC_URLS[chainId],\r\n      });\r\n      \r\n      console.log('‚úÖ Custom data transaction successful:', result);\r\n      \r\n      return {\r\n        success: true,\r\n        transactionHash: result.transactionHash || result.hash || 'mock_tx_hash',\r\n        amount: ggusdAmount,\r\n        currency: 'GGUSD',\r\n        chain: this.getChainName(chainId),\r\n        starletAmount: purchaseData.quantity || 1,\r\n        timestamp: new Date().toISOString(),\r\n        customData: customData,\r\n        network: this.getChainName(chainId),\r\n      };\r\n      \r\n    } catch (error) {\r\n      console.error('‚ùå Custom data transaction failed:', error);\r\n      \r\n      // Handle specific errors\r\n      if (error.message && error.message.includes('pop-up cannot be ejected')) {\r\n        console.warn('üö´ Popup blocked! Please allow popups for this site.');\r\n        return {\r\n          success: false,\r\n          error: 'Payment popup was blocked. Please allow popups for this site and try again.',\r\n          originalError: error.message\r\n        };\r\n      }\r\n      \r\n      return {\r\n        success: false,\r\n        error: error.message,\r\n        chain: this.getChainName(chainId)\r\n      };\r\n    }\r\n  }\r\n\r\n  /**\r\n   * Helper methods\r\n   */\r\n  getChainName(chainId) {\r\n    return this.CHAIN_NAMES[chainId] || 'Unknown';\r\n  }\r\n\r\n  getTreasuryAddress(chainId) {\r\n    // You can implement dynamic treasury address logic here\r\n    return '0x1a7dabEfb9D1fD8BF3197d61C0D6aa8ef3948fEb';\r\n  }\r\n\r\n  // GGUSD ABI (copy from original service)\r\n  get GGUSD_ABI() {\r\n    return [\r\n      {\r\n        \"constant\": false,\r\n        \"inputs\": [\r\n          {\"name\": \"_to\", \"type\": \"address\"},\r\n          {\"name\": \"_value\", \"type\": \"uint256\"}\r\n        ],\r\n        \"name\": \"transfer\",\r\n        \"outputs\": [{\"name\": \"\", \"type\": \"bool\"}],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"nonpayable\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [{\"name\": \"_owner\", \"type\": \"address\"}],\r\n        \"name\": \"balanceOf\",\r\n        \"outputs\": [{\"name\": \"balance\", \"type\": \"uint256\"}],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      },\r\n      {\r\n        \"constant\": true,\r\n        \"inputs\": [],\r\n        \"name\": \"decimals\",\r\n        \"outputs\": [{\"name\": \"\", \"type\": \"uint8\"}],\r\n        \"payable\": false,\r\n        \"stateMutability\": \"view\",\r\n        \"type\": \"function\"\r\n      }\r\n    ];\r\n  }\r\n\r\n  /**\r\n   * Check if user is authenticated and verified\r\n   */\r\n  isUserAuthenticated() {\r\n    return !!(this.accessToken && this.currentUser?.isVerified);\r\n  }\r\n\r\n  /**\r\n   * Get current user info\r\n   */\r\n  getCurrentUser() {\r\n    return this.currentUser;\r\n  }\r\n\r\n  /**\r\n   * Logout and clear all data\r\n   */\r\n  logout() {\r\n    this.clearStoredTokens();\r\n    this.currentUser = null;\r\n    this.fslAuth = null;\r\n    this.isInitialized = false;\r\n    console.log('‚úÖ User logged out successfully');\r\n  }\r\n}\r\n\r\nconst oauthFSLAuthService = new OAuthFSLAuthService();\r\nexport default oauthFSLAuthService;\r\n"],"names":["constructor","this","accessToken","currentUser","fslAuth","isInitialized","isDevelopment","window","location","hostname","FSL_OAUTH_URL","FSL_USER_PROFILE_URL","APP_KEY","REDIRECT_URI","origin","pathname","GGUSD_CONTRACTS","CHAIN_NAMES","FSL_CHAIN_MAPPING","RPC_URLS","authenticateWithOAuth","console","log","params","URLSearchParams","response_type","appkey","redirect_uri","encodeURIComponent","scope","state","oauthUrl","toString","href","error","handleOAuthCallback","fragment","hash","substring","get","Error","localStorage","setItem","Date","now","success","message","getAccessToken","storedToken","getItem","timestamp","tokenAge","parseInt","clearStoredTokens","removeItem","verifyUserIdentity","_fslUserProfile$data","_fslUserProfile$data2","fslUserProfile","getFSLUserProfile","marketUserData","getMarketUserData","fslId","data","fslUid","uid","marketFSLId","isMatch","fslProfile","marketProfile","isVerified","verifiedAt","toISOString","user","response","fetch","method","headers","ok","status","statusText","json","API_CONFIG","server_url","initFSLSDK","initOptions","appKey","redirectUri","usePopup","isApp","domain","FSLAuthorization","init","processPayment","purchaseData","chainId","verificationResult","result","callEvmContractByCallDataWithCustomData","customData","contractAddress","treasuryAddress","getTreasuryAddress","ggusdAmount","price","contract","Web3","eth","Contract","GGUSD_ABI","contractDecimals","methods","decimals","call","Number","amountInWeiString","ethers","length","callData","defaultAbiCoder","encode","slice","callEvmContractByCallData","gasLimit","chain","rpc","transactionHash","amount","currency","getChainName","starletAmount","quantity","network","includes","warn","originalError","isUserAuthenticated","_this$currentUser","getCurrentUser","logout"],"sourceRoot":""}